import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, useColorScheme, Alert } from 'react-native';
import * as WebBrowser from 'expo-web-browser';  
import * as Linking from 'expo-linking';


export default function RegisterScreen({ navigation }) {
    const [email, setEmail] = useState('');
    const [phoneNumber, setPhoneNumber] = useState('');
    const [name, setName] = useState('');
    const [surname, setSurname] = useState('');
    const [password, setPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const colorScheme = useColorScheme();

    const handleRegister = async () => {
        if (password === confirmPassword) {
            try {
                const response = await fetch('http://localhost:3000/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        email,
                        phoneNumber,
                        name,
                        surname,
                        password
                    }),
                });

                const result = await response.json();
                if (response.ok) {
                    Alert.alert('–£—Å–ø—ñ—Ö ‚úîÔ∏è', result.message);
                    navigation.navigate('Welcome');
                } else {
                    Alert.alert('–ü–æ–º–∏–ª–∫–∞ üö´', result.message || '–ù–µ–≤–¥–∞–ª–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è');
                }
            } catch (error) {
                Alert.alert('–ü–æ–º–∏–ª–∫–∞ üö´', `–ù–µ–≤–¥–∞–ª–∞ —Å–ø—Ä–æ–±–∞ –ø—ñ–¥'—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä—É`);
            }
        } else {
            alert('Passwords do not match');
        }
    };

    const handleDiiaRegister = async () => {
        const clientId = 'YOUR_CLIENT_ID';  // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à client_id
        const redirectUri = Linking.createURL('diia-callback');  // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        const authorizationUrl = `https://id.diia.gov.ua`;
    
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const result = await WebBrowser.openAuthSessionAsync(authorizationUrl, redirectUri);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (result.type === 'success' && result.url) {
            const code = getCodeFromUrl(result.url);  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–¥–∞ –∏–∑ URL
            await handleExchangeToken(code);  // –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞
        } else {
            Alert.alert('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —á–µ—Ä–µ–∑ –î—ñ—é');
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ URL
    const getCodeFromUrl = (url) => {
        const params = new URLSearchParams(url.split('?')[1]);
        return params.get('code');
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞
    const handleExchangeToken = async (code) => {
        try {
            const tokenResponse = await fetch('https://id.diia.gov.ua/token', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectUri}&client_id=${clientId}&client_secret=YOUR_CLIENT_SECRET`
            });
    
            const tokenData = await tokenResponse.json();
            if (tokenData.access_token) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await fetchUserData(tokenData.access_token);
            } else {
                Alert.alert('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø—É');
            }
        } catch (error) {
            Alert.alert('–ü–æ–º–∏–ª–∫–∞', '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±–º—ñ–Ω—ñ —Ç–æ–∫–µ–Ω—ñ–≤');
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é —Ç–æ–∫–µ–Ω–∞
    const fetchUserData = async (accessToken) => {
        try {
            const userDataResponse = await fetch('https://id.diia.gov.ua/userinfo', {
                method: 'GET',
                headers: {
                    Authorization: `Bearer ${accessToken}`,
                },
            });
    
            const userData = await userDataResponse.json();
            if (userData) {
                // –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                Alert.alert('–£—Å–ø—ñ—Ö', `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${userData.name}`);
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –≤—Ö–æ–¥–∞
            } else {
                Alert.alert('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            }
        } catch (error) {
            Alert.alert('–ü–æ–º–∏–ª–∫–∞', '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
        }
    };
    
    const styles = colorScheme === 'dark' ? darkStyles : lightStyles;

    return (
        <ScrollView contentContainerStyle={styles.container}>
            <View style={styles.form}>
                <Text style={styles.title}>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</Text>
                <TextInput
                    style={styles.input}
                    placeholder="Email"
                    value={email}
                    onChangeText={setEmail}
                    keyboardType="email-address"
                    autoCapitalize="none"
                    placeholderTextColor={colorScheme === 'dark' ? '#aaa' : '#888'}
                />
                <TextInput
                    style={styles.input}
                    placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
                    value={phoneNumber}
                    onChangeText={setPhoneNumber}
                    keyboardType="phone-pad"
                    autoCapitalize="none"
                    placeholderTextColor={colorScheme === 'dark' ? '#aaa' : '#888'}
                />
                <TextInput
                    style={styles.input}
                    placeholder="–í–∞—à–µ —ñ–º'—è"
                    value={name}
                    onChangeText={setName}
                    keyboardType="default"
                    autoCapitalize="words"
                    placeholderTextColor={colorScheme === 'dark' ? '#aaa' : '#888'}
                />
                <TextInput
                    style={styles.input}
                    placeholder="–í–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ"
                    value={surname}
                    onChangeText={setSurname}
                    keyboardType="default"
                    autoCapitalize="words"
                    placeholderTextColor={colorScheme === 'dark' ? '#aaa' : '#888'}
                />
                <TextInput
                    style={styles.input}
                    placeholder="–ü–∞—Ä–æ–ª—å"
                    value={password}
                    onChangeText={setPassword}
                    secureTextEntry
                    autoCapitalize="none"
                    placeholderTextColor={colorScheme === 'dark' ? '#aaa' : '#888'}
                />
                <TextInput
                    style={styles.input}
                    placeholder="–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –ø–∞—Ä–æ–ª—å"
                    value={confirmPassword}
                    onChangeText={setConfirmPassword}
                    secureTextEntry
                    autoCapitalize="none"
                    placeholderTextColor={colorScheme === 'dark' ? '#aaa' : '#888'}
                />
                
                {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
                <TouchableOpacity style={styles.button} onPress={handleRegister}>
                    <Text style={styles.buttonText}>–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è</Text>
                </TouchableOpacity>

                {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –î—ñ—é */}
                <TouchableOpacity style={styles.diiaButton} onPress={handleDiiaRegister}>
                    <Text style={styles.diiaButtonText}>–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ –î—ñ—é</Text>
                </TouchableOpacity>

                <TouchableOpacity style={styles.link} onPress={() => navigation.navigate('Login')}>
                    <Text style={styles.linkText}>–í–∂–µ —î –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å? –£–≤—ñ–π–¥—ñ—Ç—å</Text>
                </TouchableOpacity>
            </View>
        </ScrollView>
    );
}

const lightStyles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f8f9fa',
        justifyContent: 'center',
        padding: 20,
    },
    form: {
        backgroundColor: '#ffffff',
        borderRadius: 10,
        padding: 20,
        shadowColor: '#000000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 8,
        elevation: 5,
    },
    title: {
        fontSize: 28,
        fontWeight: 'bold',
        color: '#333',
        marginBottom: 20,
        textAlign: 'center',
    },
    input: {
        height: 45,
        borderColor: '#ced4da',
        borderWidth: 1,
        borderRadius: 8,
        marginBottom: 15,
        paddingHorizontal: 15,
        backgroundColor: '#ffffff',
    },
    button: {
        backgroundColor: '#007bff',
        paddingVertical: 15,
        borderRadius: 8,
        alignItems: 'center',
        marginVertical: 10,
    },
    buttonText: {
        color: '#ffffff',
        fontSize: 16,
        fontWeight: 'bold',
    },
    diiaButton: {
        backgroundColor: '#28a745',
        paddingVertical: 15,
        borderRadius: 8,
        alignItems: 'center',
        marginVertical: 10,
    },
    diiaButtonText: {
        color: '#ffffff',
        fontSize: 16,
        fontWeight: 'bold',
    },
    link: {
        alignItems: 'center',
        marginTop: 10,
    },
    linkText: {
        color: '#007bff',
        fontSize: 16,
        textDecorationLine: 'underline',
    },
});

const darkStyles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#121212',
        justifyContent: 'center',
        padding: 20,
    },
    form: {
        backgroundColor: '#1f1f1f',
        borderRadius: 10,
        padding: 20,
        shadowColor: '#000000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.3,
        shadowRadius: 8,
        elevation: 5,
    },
    title: {
        fontSize: 28,
        fontWeight: 'bold',
        color: '#ffffff',
        marginBottom: 20,
        textAlign: 'center',
    },
    input: {
        height: 45,
        borderColor: '#444444',
        borderWidth: 1,
        borderRadius: 8,
        marginBottom: 15,
        paddingHorizontal: 15,
        backgroundColor: '#333333',
    },
    button: {
        backgroundColor: '#1e88e5',
        paddingVertical: 15,
        borderRadius: 8,
        alignItems: 'center',
        marginVertical: 10,
    },
    buttonText: {
        color: '#ffffff',
        fontSize: 16,
        fontWeight: 'bold',
    },
    diiaButton: {
        backgroundColor: '#28a745',
        paddingVertical: 15,
        borderRadius: 8,
        alignItems: 'center',
        marginVertical: 10,
    },
    diiaButtonText: {
        color: '#ffffff',
        fontSize: 16,
        fontWeight: 'bold',
    },
    link: {
        alignItems: 'center',
        marginTop: 10,
    },
    linkText: {
        color: '#1e88e5',
        fontSize: 16,
        textDecorationLine: 'underline',
    },
});
